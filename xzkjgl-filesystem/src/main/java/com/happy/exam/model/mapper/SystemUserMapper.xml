<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="com.happy.exam.model.SystemUser">

	<resultMap id="RM_SystemUser" type="com.happy.exam.model.SystemUser">
		<result property="userId" column="UserId" />
		<result property="deptId" column="DeptId" />
		<result property="forcastNumber" column="ForcastNumber" />
		<result property="loginName" column="LoginName" />
		<result property="password" column="Password" />
		<result property="userName" column="UserName" />
		<result property="engName" column="EngName" />
		<result property="birthday" column="Birthday" />
		<result property="phoneNumber" column="PhoneNumber" />
		<result property="email" column="Email" />
		<result property="sex" column="Sex" />
		<result property="address" column="Address" />
		<result property="idCard" column="IdCard" />
		<result property="educationFirst" column="EducationFirst" />
		<result property="schoolFirst" column="SchoolFirst" />
		<result property="majorFirst" column="MajorFirst" />
		<result property="graduateFirst" column="GraduateFirst" />
		<result property="educationSecond" column="EducationSecond" />
		<result property="schoolSecond" column="SchoolSecond" />
		<result property="majorSecond" column="MajorSecond" />
		<result property="graduateSecond" column="GraduateSecond" />
		<result property="jobTitle" column="JobTitle" />
		<result property="jobDate" column="JobDate" />
		<result property="jobRemark" column="JobRemark" />
		<result property="forcastBeginDate" column="ForcastBeginDate" />
		<result property="train" column="Train" />
		<result property="status" column="Status" />
		<result property="remark" column="Remark" />
		<result property="createUser" column="CreateUser" />
		<result property="createTime" column="CreateTime" />
		<result property="updateTime" column="UpdateTime" />

		<association property="department" column="deptId"
			select="com.happy.exam.model.Department.getById" javaType="com.happy.exam.model.Department">
			<id property="deptId" column="DeptId" />
			<result property="deptName" column="DeptName" />
			<result property="parentId" column="ParentId" />
			<result property="areaCode" column="AreaCode" />
		</association>
	</resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
		UserId,DeptId,ForcastNumber,LoginName,Password,UserName,EngName,Birthday,PhoneNumber,Email,Sex,Address,IdCard,EducationFirst,SchoolFirst,MajorFirst,GraduateFirst,EducationSecond,SchoolSecond,MajorSecond,GraduateSecond,JobTitle,JobDate,JobRemark,ForcastBeginDate,Train,Status,Remark,CreateUser,CreateTime,UpdateTime
	    ]]>
	</sql>

	<!--保存 -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="userId">
	    <![CDATA[
	        INSERT INTO system_user ( 
	        	UserId ,
	        	DeptId ,
	        	ForcastNumber ,
	        	LoginName ,
	        	Password ,
	        	UserName ,
	        	EngName ,
	        	Birthday ,
	        	PhoneNumber ,
	        	Email ,
	        	Sex ,
	        	Address ,
	        	IdCard ,
	        	EducationFirst ,
	        	SchoolFirst ,
	        	MajorFirst ,
	        	GraduateFirst ,
	        	EducationSecond ,
	        	SchoolSecond ,
	        	MajorSecond ,
	        	GraduateSecond ,
	        	JobTitle ,
	        	JobDate ,
	        	JobRemark ,
	        	ForcastBeginDate ,
	        	Train ,
	        	Status ,
	        	Remark ,
	        	CreateUser ,
	        	CreateTime ,
	        	UpdateTime 
	        ) VALUES (
	        	#{userId} ,
	        	#{deptId} ,
	        	#{forcastNumber} ,
	        	#{loginName} ,
	        	#{password} ,
	        	#{userName} ,
	        	#{engName} ,
	        	#{birthday} ,
	        	#{phoneNumber} ,
	        	#{email} ,
	        	#{sex} ,
	        	#{address} ,
	        	#{idCard} ,
	        	#{educationFirst} ,
	        	#{schoolFirst} ,
	        	#{majorFirst} ,
	        	#{graduateFirst} ,
	        	#{educationSecond} ,
	        	#{schoolSecond} ,
	        	#{majorSecond} ,
	        	#{graduateSecond} ,
	        	#{jobTitle} ,
	        	#{jobDate} ,
	        	#{jobRemark} ,
	        	#{forcastBeginDate} ,
	        	#{train} ,
	        	#{status} ,
	        	#{remark} ,
	        	#{createUser} ,
	        	#{createTime} ,
	        	#{updateTime} 
	        )
	    ]]>
	</insert>

	<!-- 批量保存 -->
	<insert id="insertBatch">
	    <![CDATA[
	        INSERT INTO system_user (
	        		UserId ,
	        		DeptId ,
	        		ForcastNumber ,
	        		LoginName ,
	        		Password ,
	        		UserName ,
	        		EngName ,
	        		Birthday ,
	        		PhoneNumber ,
	        		Email ,
	        		Sex ,
	        		Address ,
	        		IdCard ,
	        		EducationFirst ,
	        		SchoolFirst ,
	        		MajorFirst ,
	        		GraduateFirst ,
	        		EducationSecond ,
	        		SchoolSecond ,
	        		MajorSecond ,
	        		GraduateSecond ,
	        		JobTitle ,
	        		JobDate ,
	        		JobRemark ,
	        		ForcastBeginDate ,
	        		Train ,
	        		Status ,
	        		Remark ,
	        		CreateUser ,
	        		CreateTime ,
	        		UpdateTime 
	        ) VALUES 
	         ]]>
		<foreach item="item" collection="list" separator=",">
			(
			#{item.userId} ,
			#{item.deptId} ,
			#{item.forcastNumber} ,
			#{item.loginName} ,
			#{item.password} ,
			#{item.userName} ,
			#{item.engName} ,
			#{item.birthday} ,
			#{item.phoneNumber} ,
			#{item.email} ,
			#{item.sex} ,
			#{item.address} ,
			#{item.idCard} ,
			#{item.educationFirst} ,
			#{item.schoolFirst} ,
			#{item.majorFirst} ,
			#{item.graduateFirst} ,
			#{item.educationSecond} ,
			#{item.schoolSecond}
			,
			#{item.majorSecond} ,
			#{item.graduateSecond} ,
			#{item.jobTitle} ,
			#{item.jobDate} ,
			#{item.jobRemark} ,
			#{item.forcastBeginDate} ,
			#{item.train} ,
			#{item.status} ,
			#{item.remark} ,
			#{item.createUser} ,
			#{item.createTime} ,
			#{item.updateTime}
			)
		</foreach>

	</insert>

	<!-- update 条件组合 -->
	<sql id="update_sql">
		<set>
			<if test="deptId != null">
				DeptId = #{deptId} ,
			</if>
			<if test="forcastNumber != null and forcastNumber != ''">
				ForcastNumber = #{forcastNumber} ,
			</if>
			<if test="loginName != null and loginName != ''">
				LoginName = #{loginName} ,
			</if>
			<if test="password != null and password != ''">
				Password = #{password} ,
			</if>
			<if test="userName != null and userName != ''">
				UserName = #{userName} ,
			</if>
			<if test="engName != null and engName != ''">
				EngName = #{engName} ,
			</if>
			<if test="birthday != null">
				Birthday = #{birthday} ,
			</if>
			<if test="phoneNumber != null and phoneNumber != ''">
				PhoneNumber = #{phoneNumber} ,
			</if>
			<if test="email != null and email != ''">
				Email = #{email} ,
			</if>
			<if test="sex != null and sex != ''">
				Sex = #{sex} ,
			</if>
			<if test="address != null and address != ''">
				Address = #{address} ,
			</if>
			<if test="idCard != null and idCard != ''">
				IdCard = #{idCard} ,
			</if>
			<if test="educationFirst != null and educationFirst != ''">
				EducationFirst = #{educationFirst} ,
			</if>
			<if test="schoolFirst != null and schoolFirst != ''">
				SchoolFirst = #{schoolFirst} ,
			</if>
			<if test="majorFirst != null and majorFirst != ''">
				MajorFirst = #{majorFirst} ,
			</if>
			<if test="graduateFirst != null">
				GraduateFirst = #{graduateFirst} ,
			</if>
			<if test="educationSecond != null and educationSecond != ''">
				EducationSecond = #{educationSecond} ,
			</if>
			<if test="schoolSecond != null and schoolSecond != ''">
				SchoolSecond = #{schoolSecond} ,
			</if>
			<if test="majorSecond != null and majorSecond != ''">
				MajorSecond = #{majorSecond} ,
			</if>
			<if test="graduateSecond != null">
				GraduateSecond = #{graduateSecond} ,
			</if>
			<if test="jobTitle != null and jobTitle != ''">
				JobTitle = #{jobTitle} ,
			</if>
			<if test="jobDate != null">
				JobDate = #{jobDate} ,
			</if>
			<if test="jobRemark != null and jobRemark != ''">
				JobRemark = #{jobRemark} ,
			</if>
			<if test="forcastBeginDate != null">
				ForcastBeginDate = #{forcastBeginDate} ,
			</if>
			<if test="train != null and train != ''">
				Train = #{train} ,
			</if>
			<if test="status != null">
				Status = #{status} ,
			</if>
			<if test="remark != null and remark != ''">
				Remark = #{remark} ,
			</if>
			<if test="createUser != null">
				CreateUser = #{createUser} ,
			</if>
			<if test="createTime != null">
				CreateTime = #{createTime} ,
			</if>
			<if test="updateTime != null">
				UpdateTime = #{updateTime}
			</if>
		</set>
	</sql>

	<!-- 修改 -->
	<update id="update">
		UPDATE system_user
		<include refid="update_sql" />
		WHERE
		UserId = #{userId}
	</update>

	<!-- 根据ID删除 -->
	<delete id="delete">
    	<![CDATA[
        	DELETE FROM system_user 
        	WHERE
        		UserId = #{userId} 
    	]]>
	</delete>

	<!-- 批量删除 -->
	<delete id="delete_batch">
		DELETE FROM system_user
		WHERE UserId IN
		<foreach item="ids" collection="list" open="(" separator=","
			close=")">
			#{ids}
		</foreach>
	</delete>

	<!-- selsect -->
	<select id="getById" resultMap="RM_SystemUser">
		SELECT
		<include refid="columns" />
		FROM system_user
		WHERE
		UserId = #{userId}
	</select>

	<!-- 模糊查询这样： 字段名 LIKE CONCAT('%',CONCAT(#{model.userName},'%')) -->
	<sql id="findPage_where">
		<where>
			<if test="model.userId != null">
				AND UserId = #{model.userId}
			</if>
			<if test="model.deptId != null">
				AND DeptId = #{model.deptId}
			</if>
			<if test="model.forcastNumber != null and model.forcastNumber !=''">
				AND ForcastNumber = #{model.forcastNumber}
			</if>
			<if test="model.loginName != null and model.loginName !=''">
				AND LoginName LIKE
				CONCAT('%',CONCAT(#{model.loginName},'%'))
			</if>
			<if test="model.password != null and model.password !=''">
				AND Password = #{model.password}
			</if>
			<if test="model.userName != null and model.userName !=''">
				OR UserName LIKE
				CONCAT('%',CONCAT(#{model.userName},'%'))
			</if>
			<if test="model.engName != null and model.engName !=''">
				AND EngName = #{model.engName}
			</if>
			<if test="model.birthday != null">
				AND Birthday = #{model.birthday}
			</if>

			<if test="model.phoneNumber != null and model.phoneNumber !=''">
				AND PhoneNumber = #{model.phoneNumber}
			</if>
			<if test="model.email != null and model.email !=''">
				AND Email = #{model.email}
			</if>
			<if test="model.sex != null and model.sex !=''">
				AND Sex = #{model.sex}
			</if>
			<if test="model.address != null and model.address !=''">
				AND Address = #{model.address}
			</if>
			<if test="model.idCard != null and model.idCard !=''">
				AND IdCard = #{model.idCard}
			</if>
			<if test="model.educationFirst != null and model.educationFirst !=''">
				AND EducationFirst = #{model.educationFirst}
			</if>
			<if test="model.schoolFirst != null and model.schoolFirst !=''">
				AND SchoolFirst = #{model.schoolFirst}
			</if>
			<if test="model.majorFirst != null and model.majorFirst !=''">
				AND MajorFirst = #{model.majorFirst}
			</if>
			<if test="model.graduateFirst != null">
				AND GraduateFirst = #{model.graduateFirst}
			</if>

			<if test="model.educationSecond != null and model.educationSecond !=''">
				AND EducationSecond = #{model.educationSecond}
			</if>
			<if test="model.schoolSecond != null and model.schoolSecond !=''">
				AND SchoolSecond = #{model.schoolSecond}
			</if>
			<if test="model.majorSecond != null and model.majorSecond !=''">
				AND MajorSecond = #{model.majorSecond}
			</if>
			<if test="model.graduateSecond != null">
				AND GraduateSecond = #{model.graduateSecond}
			</if>

			<if test="model.jobTitle != null and model.jobTitle !=''">
				AND JobTitle = #{model.jobTitle}
			</if>
			<if test="model.jobDate != null">
				AND JobDate = #{model.jobDate}
			</if>

			<if test="model.jobRemark != null and model.jobRemark !=''">
				AND JobRemark = #{model.jobRemark}
			</if>
			<if test="model.forcastBeginDate != null">
				AND ForcastBeginDate = #{model.forcastBeginDate}
			</if>

			<if test="model.train != null and model.train !=''">
				AND Train = #{model.train}
			</if>
			<if test="model.status != null">
				AND Status = #{model.status}
			</if>
			<if test="model.remark != null and model.remark !=''">
				AND Remark = #{model.remark}
			</if>
			<if test="model.createUser != null">
				AND CreateUser = #{model.createUser}
			</if>
			<if test="model.createTimeBegin != null">
				AND CreateTime &gt;= #{model.createTimeBegin}
			</if>
			<if test="model.createTimeEnd != null">
				AND CreateTime &lt;= #{model.createTimeEnd}
			</if>
			<if test="model.updateTimeBegin != null">
				AND UpdateTime &gt;= #{model.updateTimeBegin}
			</if>
			<if test="model.updateTimeEnd != null">
				AND UpdateTime &lt;= #{model.updateTimeEnd}
			</if>
		</where>
	</sql>

	<!-- 获取总数 -->
	<select id="findPage_count" resultType="long">
		SELECT COUNT(1)
		FROM system_user
		<include refid="findPage_where" />
	</select>

	<select id="findPage" resultMap="RM_SystemUser">
		SELECT
		<include refid="columns" />
		FROM system_user
		<include refid="findPage_where" />

		<if test="model.sortColumns != null and model.sortColumns !=''">
			ORDER BY ${model.sortColumns}
		</if>

		<if test="offset != null and pageSize != null">
			LIMIT #{offset}, #{pageSize}
		</if>
	</select>

	<!-- 根据组ID查询组下的所有用户 -->
	<select id="findUserByGroupId" resultType="com.happy.exam.common.bean.UserGroupModel">
		SELECT
		sug.id as userGroupId,dept.deptId, dept.deptName, su.userId,
		su.userName,su.loginName,su.phoneNumber
		FROM
		system_user su,
		system_group sg, system_user_group sug, department
		dept

		WHERE su.DeptId
		= dept.DeptId and su.UserId = sug.UserId and
		sg.GroupId = sug.GroupId

		<if test="groupId != null">
			AND sug.groupId = #{groupId}
		</if>
		<if test="user.loginName != null">
			AND LoginName LIKE
			CONCAT('%',CONCAT(#{user.loginName},'%'))
		</if>
		<if test="user.userName != null">
			OR UserName LIKE CONCAT('%',CONCAT(#{user.userName},'%'))
		</if>

		GROUP BY su.UserId
		ORDER BY sug.id desc
	</select>

	<!-- 根据UserId查找其拥有的角色 -->
	<select id="findRoleListByUserId" resultType="com.happy.exam.model.SystemRole">
		SELECT 
			sr.engName FROM system_user su, system_group sg, 
			system_user_group sug, system_role sr, system_role_group srg
		WHERE
			su.UserId = sug.UserId
			AND sug.GroupId = sg.GroupId
			AND sg.GroupId = srg.GroupId
			AND srg.RoleId = sr.RoleId
			AND su.UserId = #{userId}
		GROUP BY sr.RoleId
	</select>

	<!-- 根据userId查其所有的资源与操作权 -->
	<select id="findPermissionsByUserId" resultType="com.happy.exam.common.bean.UserRolePermissionModel">
		SELECT su.userid,su.userName, sug.groupId,srs.resourceID,
			srs.resourceName ,srs.engname as moduleEngName, srs.path,srr.operateId
			FROM system_user_group sug 
			INNER JOIN system_user su on su.UserId =sug.UserId
			INNER JOIN system_group sg on sug.GroupId = sg.GroupId
			INNER JOIN system_role_group srg on srg.GroupId = sg.GroupId
			INNER JOIN system_role sr on sr.RoleId = srg.RoleId
			INNER JOIN system_role_resource srr on srr.roleId = sr.RoleId
			INNER JOIN system_resource srs ON srs.ResourceId = srr.ResourceId
		WHERE  srs.status = 1 AND sug.UserId = #{userId}
	</select>

</mapper>
