<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="com.happy.exam.model.ExamUserTestPaperAnswer">

	<resultMap id="RM_ExamUserTestPaperAnswer" type="com.happy.exam.model.ExamUserTestPaperAnswer">
        <result property="testAnswerId" column="TestAnswerId"/>
        <result property="testLibId" column="TestLibId"/>
        <result property="userId" column="UserId"/>
        <result property="examId" column="ExamId"/>
        <result property="userAnswer" column="UserAnswer"/>
        <result property="imgSrc" column="ImgSrc"/>
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
		TestAnswerId,TestLibId,UserId,ExamId,UserAnswer,ImgSrc
	    ]]>
	</sql>

	<!--保存 -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="testAnswerId">
	    <![CDATA[
	        INSERT INTO exam_user_test_paper_answer ( 
	        	TestAnswerId ,
	        	TestLibId ,
	        	UserId ,
	        	ExamId ,
	        	UserAnswer ,
	        	ImgSrc 
	        ) VALUES (
	        	#{testAnswerId} ,
	        	#{testLibId} ,
	        	#{userId} ,
	        	#{examId} ,
	        	#{userAnswer} ,
	        	#{imgSrc} 
	        )
	    ]]>
	</insert>
	
	<!-- 批量保存 -->
	<insert id="insertBatch">
	    <![CDATA[
	        INSERT INTO exam_user_test_paper_answer (
	        		TestAnswerId ,
	        		TestLibId ,
	        		UserId ,
	        		ExamId ,
	        		UserAnswer ,
	        		ImgSrc 
	        ) VALUES 
	         ]]>
	        <foreach item="item" collection="list"   separator=",">
	        	(
					#{item.testAnswerId} ,
					#{item.testLibId} ,
					#{item.userId} ,
					#{item.examId} ,
					#{item.userAnswer} ,
					#{item.imgSrc} 
	        	)
			</foreach>
	   
	</insert>

	<!-- update 条件组合 -->
	<sql id="update_sql">
		<set>
			<if test="testLibId != null and testLibId != ''">
				TestLibId = #{testLibId} ,
			</if>
			<if test="userId != null">
				UserId = #{userId} ,
			</if>
			<if test="examId != null">
				ExamId = #{examId} ,
			</if>
			<if test="userAnswer != null and userAnswer != ''">
				UserAnswer = #{userAnswer} ,
			</if>
			<if test="imgSrc != null and imgSrc != ''">
				ImgSrc = #{imgSrc} 
			</if>
		</set>
	</sql>
	
	<!-- 修改 -->
	<update id="update">
		UPDATE exam_user_test_paper_answer
		<include refid="update_sql" />
		WHERE
			TestAnswerId = #{testAnswerId} 	</update>

	<!-- 根据ID删除 -->
	<delete id="delete">
    	<![CDATA[
        	DELETE FROM exam_user_test_paper_answer 
        	WHERE
        		TestAnswerId = #{testAnswerId} 
    	]]>
	</delete>
	
	<!-- 批量删除 -->
	<delete id="delete_batch">
        DELETE FROM exam_user_test_paper_answer 
        WHERE TestAnswerId IN 
        <foreach item="ids" collection="list" open="(" separator="," close=")">
			#{ids}
		</foreach>
    </delete>

	<!-- selsect -->
	<select id="getById" resultMap="RM_ExamUserTestPaperAnswer">
		SELECT
		<include refid="columns" />
		FROM exam_user_test_paper_answer
		WHERE
		TestAnswerId = #{testAnswerId}
	</select>

	<!-- 模糊查询这样： 字段名 LIKE CONCAT('%',CONCAT(#{model.userName},'%')) -->
	<sql id="findPage_where">
		<where>
				<if test="model.testAnswerId != null">
					AND TestAnswerId = #{model.testAnswerId}
				</if>
				<if test="model.testLibId != null and model.testLibId !=''">
					AND TestLibId = #{model.testLibId}
				</if>
				<if test="model.userId != null">
					AND UserId = #{model.userId}
				</if>
				<if test="model.examId != null">
					AND ExamId = #{model.examId}
				</if>
				<if test="model.userAnswer != null and model.userAnswer !=''">
					AND UserAnswer = #{model.userAnswer}
				</if>
				<if test="model.imgSrc != null and model.imgSrc !=''">
					AND ImgSrc = #{model.imgSrc}
				</if>
		</where>
	</sql>

	<!-- 获取总数 -->
	<select id="findPage_count" resultType="long">
		SELECT COUNT(1)
		FROM exam_user_test_paper_answer
		<include refid="findPage_where" />
	</select>  

	<select id="findPage" resultMap="RM_ExamUserTestPaperAnswer">
		 SELECT
		<include refid="columns" />
		FROM exam_user_test_paper_answer
		<include refid="findPage_where" />

		<if test="model.sortColumns != null and model.sortColumns !=''">
			ORDER BY ${model.sortColumns}
		</if>
		
		<if test="offset != null and pageSize != null">
			LIMIT  #{offset}, #{pageSize}
		</if>
	</select>

</mapper>
