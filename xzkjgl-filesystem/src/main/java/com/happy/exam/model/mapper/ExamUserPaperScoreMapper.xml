<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="com.happy.exam.model.ExamUserPaperScore">

	<resultMap id="RM_ExamUserPaperScore" type="com.happy.exam.model.ExamUserPaperScore">
        <result property="id" column="Id"/>
        <result property="answerId" column="AnswerId"/>
        <result property="userId" column="UserId"/>
        <result property="examId" column="ExamId"/>
        <result property="sysAnswer" column="SysAnswer"/>
        <result property="userAnswer" column="UserAnswer"/>
        <result property="imgSrc" column="ImgSrc"/>
        <result property="score" column="Score"/>
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
		Id,AnswerId,UserId,ExamId,SysAnswer,UserAnswer,ImgSrc,Score
	    ]]>
	</sql>

	<!--保存 -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="id">
	    <![CDATA[
	        INSERT INTO exam_user_paper_score ( 
	        	Id ,
	        	AnswerId ,
	        	UserId ,
	        	ExamId ,
	        	SysAnswer ,
	        	UserAnswer ,
	        	ImgSrc ,
	        	Score 
	        ) VALUES (
	        	#{id} ,
	        	#{answerId} ,
	        	#{userId} ,
	        	#{examId} ,
	        	#{sysAnswer} ,
	        	#{userAnswer} ,
	        	#{imgSrc} ,
	        	#{score} 
	        )
	    ]]>
	</insert>
	
	<!-- 批量保存 -->
	<insert id="insertBatch">
	    <![CDATA[
	        INSERT INTO exam_user_paper_score (
	        		Id ,
	        		AnswerId ,
	        		UserId ,
	        		ExamId ,
	        		SysAnswer ,
	        		UserAnswer ,
	        		ImgSrc ,
	        		Score 
	        ) VALUES 
	         ]]>
	        <foreach item="item" collection="list"   separator=",">
	        	(
					#{item.id} ,
					#{item.answerId} ,
					#{item.userId} ,
					#{item.examId} ,
					#{item.sysAnswer} ,
					#{item.userAnswer} ,
					#{item.imgSrc} ,
					#{item.score} 
	        	)
			</foreach>
	   
	</insert>

	<!-- update 条件组合 -->
	<sql id="update_sql">
		<set>
			<if test="answerId != null and answerId != ''">
				AnswerId = #{answerId} ,
			</if>
			<if test="userId != null">
				UserId = #{userId} ,
			</if>
			<if test="examId != null">
				ExamId = #{examId} ,
			</if>
			<if test="sysAnswer != null and sysAnswer != ''">
				SysAnswer = #{sysAnswer} ,
			</if>
			<if test="userAnswer != null and userAnswer != ''">
				UserAnswer = #{userAnswer} ,
			</if>
			<if test="imgSrc != null and imgSrc != ''">
				ImgSrc = #{imgSrc} ,
			</if>
			<if test="score != null">
				Score = #{score} 
			</if>
		</set>
	</sql>
	
	<!-- 修改 -->
	<update id="update">
		UPDATE exam_user_paper_score
		<include refid="update_sql" />
		WHERE
			Id = #{id} 	</update>

	<!-- 根据ID删除 -->
	<delete id="delete">
    	<![CDATA[
        	DELETE FROM exam_user_paper_score 
        	WHERE
        		Id = #{id} 
    	]]>
	</delete>
	
	<!-- 批量删除 -->
	<delete id="delete_batch">
        DELETE FROM exam_user_paper_score 
        WHERE Id IN 
        <foreach item="ids" collection="list" open="(" separator="," close=")">
			#{ids}
		</foreach>
    </delete>

	<!-- selsect -->
	<select id="getById" resultMap="RM_ExamUserPaperScore">
		SELECT
		<include refid="columns" />
		FROM exam_user_paper_score
		WHERE
		Id = #{id}
	</select>

	<!-- 模糊查询这样： 字段名 LIKE CONCAT('%',CONCAT(#{model.userName},'%')) -->
	<sql id="findPage_where">
		<where>
				<if test="model.id != null">
					AND Id = #{model.id}
				</if>
				<if test="model.answerId != null and model.answerId !=''">
					AND AnswerId = #{model.answerId}
				</if>
				<if test="model.userId != null">
					AND UserId = #{model.userId}
				</if>
				<if test="model.examId != null">
					AND ExamId = #{model.examId}
				</if>
				<if test="model.sysAnswer != null and model.sysAnswer !=''">
					AND SysAnswer = #{model.sysAnswer}
				</if>
				<if test="model.userAnswer != null and model.userAnswer !=''">
					AND UserAnswer = #{model.userAnswer}
				</if>
				<if test="model.imgSrc != null and model.imgSrc !=''">
					AND ImgSrc = #{model.imgSrc}
				</if>
				<if test="model.score != null">
					AND Score = #{model.score}
				</if>
		</where>
	</sql>

	<!-- 获取总数 -->
	<select id="findPage_count" resultType="long">
		SELECT COUNT(1)
		FROM exam_user_paper_score
		<include refid="findPage_where" />
	</select>  

	<select id="findPage" resultMap="RM_ExamUserPaperScore">
		 SELECT
		<include refid="columns" />
		FROM exam_user_paper_score
		<include refid="findPage_where" />

		<if test="model.sortColumns != null and model.sortColumns !=''">
			ORDER BY ${model.sortColumns}
		</if>
		
		<if test="offset != null and pageSize != null">
			LIMIT  #{offset}, #{pageSize}
		</if>
	</select>

</mapper>
